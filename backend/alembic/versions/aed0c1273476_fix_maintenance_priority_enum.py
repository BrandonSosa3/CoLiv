"""fix_maintenance_priority_enum

Revision ID: aed0c1273476
Revises: 2ebeb3c2c437
Create Date: 2025-10-22 11:59:20.834085

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'aed0c1273476'
down_revision: Union[str, None] = '2ebeb3c2c437'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tenant_preferences')
    op.alter_column('payments', 'room_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint('payments_room_id_fkey', 'payments', type_='foreignkey')
    op.create_foreign_key(None, 'payments', 'rooms', ['room_id'], ['id'])
    op.alter_column('tenants', 'room_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint('tenants_room_id_fkey', 'tenants', type_='foreignkey')
    op.create_foreign_key(None, 'tenants', 'rooms', ['room_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tenants', type_='foreignkey')
    op.create_foreign_key('tenants_room_id_fkey', 'tenants', 'rooms', ['room_id'], ['id'], ondelete='SET NULL')
    op.alter_column('tenants', 'room_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_constraint(None, 'payments', type_='foreignkey')
    op.create_foreign_key('payments_room_id_fkey', 'payments', 'rooms', ['room_id'], ['id'], ondelete='SET NULL')
    op.alter_column('payments', 'room_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.create_table('tenant_preferences',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('tenant_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cleanliness_importance', sa.INTEGER(), server_default=sa.text('3'), autoincrement=False, nullable=True),
    sa.Column('noise_tolerance', sa.INTEGER(), server_default=sa.text('3'), autoincrement=False, nullable=True),
    sa.Column('guest_frequency', sa.INTEGER(), server_default=sa.text('3'), autoincrement=False, nullable=True),
    sa.Column('sleep_schedule', sa.VARCHAR(length=50), server_default=sa.text("'flexible'::character varying"), autoincrement=False, nullable=True),
    sa.Column('work_schedule', sa.VARCHAR(length=50), server_default=sa.text("'remote'::character varying"), autoincrement=False, nullable=True),
    sa.Column('social_preference', sa.INTEGER(), server_default=sa.text('3'), autoincrement=False, nullable=True),
    sa.Column('smoking', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('pets', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('overnight_guests', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('interests', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name='tenant_preferences_tenant_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='tenant_preferences_pkey'),
    sa.UniqueConstraint('tenant_id', name='tenant_preferences_tenant_id_key')
    )
    # ### end Alembic commands ###
